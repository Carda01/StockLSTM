version: "3.7"
  
services:
  
  ########################################
  #            kafka-broker ü´°           #
  ########################################
  
  broker1:
    image: 'bitnami/kafka:3.4.0'
    container_name: broker1
    networks:
      stock: 
        ipv4_address: 10.1.100.23
    env_file:
      - kafka.env
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092

  ########################################
  #            kafka-broker ü´°           #
  ########################################

  broker2:
    image: 'bitnami/kafka:3.4.0'
    container_name: broker2
    networks:
      stock: 
        ipv4_address: 10.1.100.24
    env_file:
      - kafka.env
    environment:
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker1:9093,2@broker2:9093'
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092

  ########################################
  #             kafka topic üíπ           #
  ########################################
  
  kafkaTopic:
    image: confluentinc/cp-kafka:6.1.1
    container_name: kafkaTopic
    depends_on:
      - broker1
      - broker2
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
      - stock
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker1:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker1:9092 --create --if-not-exists --topic stock_prices --replication-factor 1 --partitions 2

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker1:9092 --list
      "
  
  ########################################
  #              kafka UI  üßø            #
  ########################################

  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    depends_on:
      - broker1
      - broker2
      - kafkaTopic
    networks:
      - stock
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: 'broker1:9092,broker2:9092'
      KAFKA_CLUSTERS_0_NAME: local-kafka-cluster

  ########################################
  #             fluentbit üê¶             #
  ########################################
  
  fluentbit:
    image: stock:fluentbit
    networks: 
      stock:
        ipv4_address: 10.1.100.10
    depends_on:
      kafkaTopic:
        condition: service_completed_successfully

  ########################################
  #            python-script üêç          #
  ########################################

  timelinescript:
    image: stock:python
    networks:
      - stock
    depends_on:
      - fluentbit
    environment:
      - SECONDS=2
        # env_file:
        #   - api.env

  ########################################
  #            elastic-search üî•         #
  ########################################
  

  ########################################
  #               spark üêé               #
  ########################################
 

  ########################################
  #               kibana ü¶Ñ              #
  ########################################



########################################
#              networks üñß              #
########################################

networks:
  stock:
    name: stock
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.100.1/24
